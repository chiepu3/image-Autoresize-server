"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const e=require("tslib"),t=e.__importDefault(require("express")),o=e.__importDefault(require("cors")),a=e.__importDefault(require("path")),s=e.__importDefault(require("fs")),r=e.__importDefault(require("sharp")),i=e.__importDefault(require("chokidar")),n=e.__importDefault(require("axios")),l=(0,t.default)();l.use((0,o.default)()),l.use(t.default.json());let d,c={resizeWidth:1280,resizeHeight:720,enlargeSmallImages:!1,watchFolder:"",resizedFolder:"",fillTransparentWithWhite:!1,moveFromDownloads:!1,downloadsFolderPattern:""};function u(){if(d&&d.close(),d=i.default.watch(c.watchFolder,{ignored:/(^|[\/\\])\../}).on("add",(t=>{const o=a.default.extname(t).toLowerCase();[".jpg",".jpeg",".png",".gif"].includes(o)&&function(t){e.__awaiter(this,void 0,void 0,(function*(){const e=a.default.basename(t),o=a.default.join(c.resizedFolder,e);try{let s=(0,r.default)(t);c.fillTransparentWithWhite&&".png"===a.default.extname(t).toLowerCase()&&(console.log("fillTransparentWithWhite"),s=s.flatten({background:{r:255,g:255,b:255}}));const i=yield s.metadata(),n=i.width||0,l=i.height||0;!c.enlargeSmallImages&&(n<=c.resizeWidth||l<=c.resizeHeight)?c.fillTransparentWithWhite&&(yield s.resize(c.resizeWidth,c.resizeHeight,{fit:"inside",withoutEnlargement:!c.enlargeSmallImages}).toFile(o)):yield s.resize(c.resizeWidth,c.resizeHeight,{fit:"inside",withoutEnlargement:!c.enlargeSmallImages}).toFile(o),console.log(`Resized: ${e}`)}catch(t){console.error(`Error resizing ${e}:`,t)}}))}(t)})),c.moveFromDownloads){const e=a.default.join(process.env.HOME||process.env.USERPROFILE||"","Downloads");i.default.watch(e,{ignored:/(^|[\/\\])\../}).on("add",(e=>{const t=a.default.basename(e);if(t.match(c.downloadsFolderPattern)){const o=a.default.join(c.watchFolder,t);s.default.renameSync(e,o),console.log(`Moved: ${t} to watch folder`)}}))}}function f(){const e=new Date,t=e.getFullYear().toString().slice(-2)+(e.getMonth()+1).toString().padStart(2,"0")+e.getDate().toString().padStart(2,"0"),o=(s.default.readdirSync(c.watchFolder).filter((e=>e.startsWith(t))).map((e=>parseInt(e.slice(-6)))).sort(((e,t)=>t-e))[0]||0)+1;return`${t}_${o.toString().padStart(6,"0")}.jpg`}l.get("/config",((e,t)=>{t.json(c)})),l.post("/config",((e,t)=>{c=Object.assign(Object.assign({},c),e.body),c.resizeWidth=parseInt(e.body.resizeWidth,10),c.resizeHeight=parseInt(e.body.resizeHeight,10),t.json({message:"Configuration updated",config:c}),s.default.writeFileSync("config.json",JSON.stringify(c,null,2)),u()})),s.default.existsSync("config.json")&&(c=JSON.parse(s.default.readFileSync("config.json","utf-8"))),l.post("/download-image",((t,o)=>e.__awaiter(void 0,void 0,void 0,(function*(){const{url:e,filename:r}=t.body;try{const t=yield n.default.get(e,{responseType:"arraybuffer"}),i=Buffer.from(t.data,"binary"),l=a.default.join(c.watchFolder,r);s.default.writeFileSync(l,i),console.log(`Downloaded: ${r}`),o.json({message:"Image downloaded successfully"})}catch(e){console.error("Error downloading image:",e),o.status(500).json({error:"Failed to download image"})}})))),l.post("/save-image",((e,t)=>{const{filename:o,imageData:r}=e.body;try{const e=Buffer.from(r,"base64"),i=a.default.join(c.watchFolder,o);s.default.writeFileSync(i,e),console.log(`Saved: ${o}`),t.json({message:"Image saved successfully"})}catch(e){console.error("Error saving image:",e),t.status(500).json({error:"Failed to save image"})}})),l.post("/download",((t,o)=>e.__awaiter(void 0,void 0,void 0,(function*(){const{url:e}=t.body;try{const t=yield n.default.get(e,{responseType:"arraybuffer"}),r=Buffer.from(t.data,"binary"),i=f(),l=a.default.join(c.watchFolder,i);s.default.writeFileSync(l,r),o.json({success:!0,message:"Image downloaded successfully"})}catch(e){console.error("Error downloading image:",e),o.status(500).json({success:!1,message:"Failed to download image"})}})))),l.post("/saveBase64",((e,t)=>{const{base64data:o}=e.body;try{const e=o.split(";base64,").pop(),r=Buffer.from(e,"base64"),i=f(),n=a.default.join(c.watchFolder,i);s.default.writeFileSync(n,r),t.json({success:!0,message:"Base64 image saved successfully"})}catch(e){console.error("Error saving base64 image:",e),t.status(500).json({success:!1,message:"Failed to save base64 image"})}})),l.listen(8020,(()=>{console.log("Server running at http://localhost:8020"),u()}));
